# =============================================================================
# PLATFORM SELECTION
# =============================================================================

if (target_os == "") {
  target_os = host_os
}

if (target_cpu == "") {
  if (target_os == "android") {
    # If we're building for Android, we should assume that we want to
    # build for ARM by default, not the host_cpu (which is likely x64).
    # This allows us to not have to specify both target_os and target_cpu
    # on the command line.
    target_cpu = "arm"
  } else {
    target_cpu = host_cpu
  }
}

if (current_cpu == "") {
  current_cpu = target_cpu
}
if (current_os == "") {
  current_os = target_os
}

# =============================================================================
# OS DEFINITIONS
# =============================================================================

is_android = current_os == "android"
is_chromeos = current_os == "chromeos"
is_fuchsia = current_os == "fuchsia"
is_ios = current_os == "ios"
is_linux = current_os == "linux"
is_mac = current_os == "mac"
is_nacl = current_os == "nacl"
is_win = current_os == "win" || current_os == "winuwp"

is_apple = is_ios || is_mac
is_posix = !is_win && !is_fuchsia

# =============================================================================
# BUILD FLAGS
# =============================================================================

declare_args() {
  # Debug build.
  is_debug = false
}

# ==============================================================================
# TOOLCHAIN SETUP
# ==============================================================================

if (is_linux) {
  set_default_toolchain("//build/toolchain/linux:gcc")
} else {
  assert(false, "Unsupported target_os: $target_os")
}

# =============================================================================
# TARGET DEFAULTS
# =============================================================================

_shared_binary_target_configs = [ "//build/config:compiler_defaults" ]
set_defaults("executable") {
  configs = _shared_binary_target_configs
  configs += [ "//build/config:executable_ldconfig" ]
}
set_defaults("static_library") {
  configs = _shared_binary_target_configs
}
set_defaults("shared_library") {
  configs = _shared_binary_target_configs
}
set_defaults("source_set") {
  configs = _shared_binary_target_configs
}
